#! /bin/bash
echo BY INSTALLING THE SOFTWARE, YOU ARE AGREEING TO BE BOUND BY THE BlackBerry 
echo Solution License Agreement which can be reviewed at www.blackberry.com/leg-
echo al/bbsla. IF YOU HAVE ANY QUESTIONS OR CONCERNS ABOUT THE TERMS OF THIS AG-
echo REEMENT, PLEASE CONTACT blackberry AT LEGALinfo@BLACKBERRY.COM. PLEASE READ
echo THIS DOCUMENT CAREFULLY BEFORE INSTALLING OR USING THE SOFTWARE.
echo "***************************************************************************"
echo ""
if [[ `uname` = "Linux" ]] ; then
    HOST=host/linux-x86
elif [[ `uname` = "Darwin" ]] ; then
    HOST=host/darwin-x86
else
    echo "Unsupported host"
    exit 1
fi

BIN=./$HOST/bin
IMG=./img
FASTBOOT=fastboot

echo "Note:If device is not in fastboot mode"
echo "Please switch to fastboot mode by holding the power and volume down key for 30s"
VAR1=$($BIN/fastboot getvar device 2>&1 | grep "device")
read_dev="${VAR1#*:}"
read_dev=$(echo ${read_dev} | sed 's/[[:space:]]//g');
VAR1=$($BIN/fastboot getvar variant 2>&1 | grep "variant")
read_variant="${VAR1#*:}"
read_variant=$(echo ${read_variant} | sed 's/[[:space:]]//g');
if [ "tmo" == "${read_variant}" ]; then read_variant=global; fi
if [ "cdma" == "${read_variant}" ]; then read_variant=global; fi
VAR1=$($BIN/fastboot getvar subvariant 2>&1 | grep "subvariant")
read_subvariant="${VAR1#*:}"
read_subvariant=$(echo ${read_subvariant} | sed 's/[[:space:]]//g');
read_dev_sig=$read_subvariant
if [ "" == "${read_subvariant}" ]; then read_subvariant=common; fi
if [ "${read_dev}" == "" ] || [ "${read_variant}" == "" ]; then
    echo "Failed to detect the device name or variant"
    exit
fi

while true; do
read -p "This script will wipe off all user data, do you want to continue? [y/n]:" answer
    case $answer in
        [Yy] ) break;;
        [Nn] ) exit;;
        * ) echo "Please enter y or n.";;
    esac
done
$BIN/fastboot oem securewipe
echo "It may take 5 to 15 minutes to securely wipe the device"
sleep 5
read_bootchain_slots=$($BIN/fastboot getvar bootchain-slots 2>&1)
slots=$(echo ${read_bootchain_slots} | cut -d " " -f2)
if [ "${slots}" != "" ] && [ ${#slots} -ge 2 ]; then
    slot="${slots:1:1}"
else
    echo "Failed to detect bootchain slots."
    exit
fi

$BIN/$FASTBOOT flash tz_${slot} $IMG/tz.mbn
$BIN/$FASTBOOT flash devcfg_${slot} $IMG/devcfg.mbn
$BIN/$FASTBOOT flash rpm_${slot} $IMG/rpm.mbn
$BIN/$FASTBOOT flash hyp_${slot} $IMG/hyp.signed.mbn
$BIN/$FASTBOOT flash pmic_${slot} $IMG/pmic.elf
$BIN/$FASTBOOT flash xbl_${slot} $IMG/xbl.elf
$BIN/$FASTBOOT flash abl_${slot} $IMG/abl.elf
$BIN/$FASTBOOT flash cmnlib_${slot} $IMG/cmnlib.signed.mbn
$BIN/$FASTBOOT flash cmnlib64_${slot} $IMG/cmnlib64.signed.mbn
$BIN/$FASTBOOT flash keymaster_${slot} $IMG/keymaster64.signed.mbn
$BIN/$FASTBOOT flash mdtpsecapp_${slot} $IMG/mdtpsecapp.signed.mbn
$BIN/$FASTBOOT oem switch-bootchain:${slot}
$BIN/$FASTBOOT reboot bootloader
$BIN/$FASTBOOT flash bootsig $IMG/boot.img${read_dev_sig}.sig
$BIN/$FASTBOOT flash recoverysig $IMG/recovery.img${read_dev_sig}.sig
$BIN/$FASTBOOT flash boot $IMG/boot.img
$BIN/$FASTBOOT flash recovery $IMG/recovery.img
$BIN/$FASTBOOT flash cache $IMG/cache.img
$BIN/$FASTBOOT flash userdata $IMG/userdata.img
$BIN/$FASTBOOT flash modem $IMG/NON-HLOS-${read_variant}.bin
$BIN/$FASTBOOT flash dsp $IMG/dspso.bin
$BIN/$FASTBOOT flash bluetooth $IMG/BTFM.bin
$BIN/$FASTBOOT flash vendor $IMG/vendor.img
$BIN/$FASTBOOT flash system $IMG/system.img
$BIN/$FASTBOOT flash oem $IMG/oem_${read_subvariant}.img
$BIN/$FASTBOOT reboot

